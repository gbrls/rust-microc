GLOBAL _START
%MACRO EXIT 0
MOV EAX, 1   ; 1 STANDS FOR EXIT SYSCALL
POP BX       ; POP THE STATUS CODE
INT 0X80     ; MAKE SYSTEM CALL
%ENDMACRO

SECTION .DATA

Y DD 0

SECTION .TEXT

MAX:
PUSH RBP
MOV RBP, RSP
SUB RSP, 4
MOV AX, [RBP+16]
PUSH AX
MOV AX, [RBP+18]
PUSH AX
POP BX
POP AX
CMP AX, BX
MOV BX, 1
MOV CX, 0
CMOVB AX, BX
CMOVAE AX, CX
PUSH AX
POP AX
TEST AX, AX
JE .L0
MOV AX, [RBP+18]
PUSH AX
POP AX
MOV [RBP-4], AX
ADD RSP, 0
JMP .L1
.L0:
MOV AX, [RBP+16]
PUSH AX
POP AX
MOV [RBP-4], AX
ADD RSP, 0
.L1:
MOV AX, [RBP-4]
PUSH AX
POP AX
ADD RSP, 4
POP RBP
RET

MMAX:
PUSH RBP
MOV RBP, RSP
SUB RSP, 4
MOV AX, [RBP+18]
PUSH AX
MOV AX, [RBP+16]
PUSH AX
CALL MAX
ADD RSP, 8
PUSH AX
POP AX
MOV [RBP-4], AX
MOV AX, [RBP+20]
PUSH AX
MOV AX, [RBP-4]
PUSH AX
CALL MAX
ADD RSP, 8
PUSH AX
POP AX
ADD RSP, 4
POP RBP
RET

_START:
PUSH RBP
MOV RBP, RSP
SUB RSP, 4
MOV AX, 10
PUSH AX
POP AX
MOV [RBP-4], AX
MOV AX, [RBP-4]
PUSH AX
MOV AX, 10
PUSH AX
POP BX
POP AX
CMP AX, BX
MOV BX, 1
MOV CX, 0
CMOVB AX, BX
CMOVAE AX, CX
PUSH AX
POP AX
TEST AX, AX
JE .L2
MOV AX, 3
PUSH AX
MOV AX, 10
PUSH AX
CALL MAX
ADD RSP, 8
PUSH AX
POP AX
MOV [Y], AX
ADD RSP, 0
JMP .L3
.L2:
MOV AX, 13
PUSH AX
MOV AX, 2
PUSH AX
CALL MAX
ADD RSP, 8
PUSH AX
POP AX
MOV [Y], AX
ADD RSP, 0
.L3:
MOV AX, [Y]
PUSH AX
MOV AX, [RBP-4]
PUSH AX
POP BX
POP AX
ADD EAX, EBX
PUSH AX
POP AX
MOV [Y], AX
SUB RSP, 4
MOV AX, 3
PUSH AX
MOV AX, 2
PUSH AX
MOV AX, 1
PUSH AX
CALL MMAX
ADD RSP, 12
PUSH AX
POP AX
MOV [RBP-8], AX
POP AX
ADD RSP, 8
POP RBP
MOV AX, [Y]
PUSH AX

EXIT
